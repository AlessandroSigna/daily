-- MySQL Script generated by MySQL Workbench
-- Fri Oct 20 17:19:56 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DailyCollection
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DailyCollection
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DailyCollection` DEFAULT CHARACTER SET utf8 ;
USE `DailyCollection` ;

-- -----------------------------------------------------
-- Table `DailyCollection`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DailyCollection`.`Cliente` (
  `mail_cliente` VARCHAR(45) NOT NULL,
  `amministrazione` VARCHAR(1) NULL,
  `nome_cliente` VARCHAR(20) NOT NULL,
  `cognome_cliente` VARCHAR(20) NOT NULL,
  `password_cliente` VARCHAR(100) NOT NULL,
  `spedizione_cliente` VARCHAR(100) NOT NULL,
  `fatturazione_cliente` VARCHAR(100) NULL,
  `id_risposta` INT NOT NULL,
  `risposta_cliente` VARCHAR(20) NULL,
  `codice_carta_cliente` VARCHAR(16) NULL,
  `CCV_cliente` INT NULL,
  `mese_scadenza` INT NULL,
  `anno_scadenza` INT NULL,
  `citta_cliente` VARCHAR(20) NOT NULL,
  `telefono_cliente` VARCHAR(11) NULL,
  PRIMARY KEY (`mail_cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DailyCollection`.`Prodotto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DailyCollection`.`Prodotto` (
  `codice_prodotto` INT NOT NULL,
  `prezzo_prodotto` FLOAT NOT NULL,
  `sconto_prodotto` INT NOT NULL,
  `nome_prodotto` VARCHAR(45) NOT NULL,
  `modello_prodotto` VARCHAR(45) NOT NULL,
  `colore_prodotto` VARCHAR(45) NOT NULL,
  `descrizione_prodotto` VARCHAR(2000) NOT NULL,
  `immagine_prodotto` VARCHAR(100) NULL,
  `keywords_prodotto` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`codice_prodotto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DailyCollection`.`Magazzino`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DailyCollection`.`Magazzino` (
  `ref_prodotto` INT NOT NULL,
  `qty_disponibile` INT NOT NULL,
  `taglia_prodotto` VARCHAR(3) NOT NULL,
  PRIMARY KEY (`ref_prodotto`,`taglia_prodotto`),
  CONSTRAINT `ref_prodotto`
    FOREIGN KEY (`ref_prodotto`)
    REFERENCES `DailyCollection`.`Prodotto` (`codice_prodotto`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DailyCollection`.`Carrello`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DailyCollection`.`Carrello` (
  `ref_cliente` VARCHAR(45) NOT NULL,
  `ref_oggetto` INT NOT NULL,
  `taglia_acquistata` VARCHAR(3) NOT NULL,
  `qty_acquistata` INT NOT NULL,
  PRIMARY KEY (`ref_cliente`, `ref_oggetto`,`taglia_acquistata`),
  INDEX `ref_oggetto_idx` (`ref_oggetto` ASC),
  CONSTRAINT `ref_cliente`
    FOREIGN KEY (`ref_cliente`)
    REFERENCES `DailyCollection`.`Cliente` (`mail_cliente`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ref_oggetto`
    FOREIGN KEY (`ref_oggetto`)
    REFERENCES `DailyCollection`.`Prodotto` (`codice_prodotto`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DailyCollection`.`Storico_Acquisti`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DailyCollection`.`Storico_Acquisti` (
  `codice_fatturazione` VARCHAR(45) NOT NULL,
  `data_acquisto` TIMESTAMP NOT NULL,
  `ref_cliente_SA` VARCHAR(45) NOT NULL,
  `ref_oggetto_SA` INT NOT NULL,
  `qty_acquistati_SA` INT NOT NULL,
  `prezzo_acquistati_SA` INT NOT NULL,
  PRIMARY KEY (`codice_fatturazione`),
  INDEX `ref_cliente_SA_idx` (`ref_cliente_SA` ASC),
  INDEX `ref_oggetto_SA_idx` (`ref_oggetto_SA` ASC),
  CONSTRAINT `ref_cliente_SA`
    FOREIGN KEY (`ref_cliente_SA`)
    REFERENCES `DailyCollection`.`Cliente` (`mail_cliente`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ref_oggetto_SA`
    FOREIGN KEY (`ref_oggetto_SA`)
    REFERENCES `DailyCollection`.`Magazzino` (`ref_prodotto`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

SELECT `cliente`.`mail_cliente`,
	`cliente`.`amministrazione`,
    `cliente`.`nome_cliente`,
    `cliente`.`cognome_cliente`,
    `cliente`.`password_cliente`,
    `cliente`.`spedizione_cliente`,
    `cliente`.`fatturazione_cliente`,
    `cliente`.`id_risposta`,
    `cliente`.`risposta_cliente`,
    `cliente`.`codice_carta_cliente`,
    `cliente`.`CCV_cliente`,
    `cliente`.`mese_scadenza`,
    `cliente`.`anno_scadenza`,
    `cliente`.`citta_cliente`,
    `cliente`.`telefono_cliente`
FROM `dailycollection`.`cliente`;

SELECT `prodotto`.`codice_prodotto`,
    `prodotto`.`prezzo_prodotto`,
    `prodotto`.`sconto_prodotto`,
    `prodotto`.`nome_prodotto`,
    `prodotto`.`modello_prodotto`,
    `prodotto`.`colore_prodotto`,
    `prodotto`.`descrizione_prodotto`,
    `prodotto`.`immagine_prodotto`,
    `prodotto`.`keywords_prodotto`
FROM `dailycollection`.`prodotto`;

SELECT `magazzino`.`ref_prodotto`,
    `magazzino`.`qty_disponibile`,
    `magazzino`.`taglia_prodotto`
FROM `dailycollection`.`magazzino`;

SELECT `carrello`.`ref_cliente`,
    `carrello`.`ref_oggetto`,
    `carrello`.`taglia_acquistata`,
    `carrello`.`qty_acquistata`
FROM `dailycollection`.`carrello`;

SELECT `storico_acquisti`.`codice_fatturazione`,
    `storico_acquisti`.`data_acquisto`,
    `storico_acquisti`.`ref_cliente_SA`,
    `storico_acquisti`.`ref_oggetto_SA`,
    `storico_acquisti`.`qty_acquistati_SA`,
    `storico_acquisti`.`prezzo_acquistati_SA`
FROM `dailycollection`.`storico_acquisti`;
